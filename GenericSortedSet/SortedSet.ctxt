#BlueJ class context
comment0.target=SortedSet
comment0.text=\r\n\ Create\ a\ doubly\ linked\ data\ structure\ that\ stores\ elements\ in\ a\ sorted\ set.\r\n
comment1.params=
comment1.target=SortedSet()
comment10.params=sortedSet
comment10.target=boolean\ containsAll(SortedSet)
comment11.params=
comment11.target=java.lang.Comparable[]\ toArray()
comment12.params=element
comment12.target=void\ add(java.lang.Comparable)
comment13.params=elementArray
comment13.target=void\ addAll(java.lang.Comparable[])
comment14.params=sortedSet
comment14.target=void\ addAll(SortedSet)
comment15.params=
comment15.target=java.lang.Comparable\ removeSmallestValue()
comment16.params=
comment16.target=java.lang.Comparable\ removeLargestValue()
comment17.params=element
comment17.target=void\ remove(java.lang.Comparable)
comment18.params=elementArray
comment18.target=void\ removeAll(java.lang.Comparable[])
comment19.params=sortedSet
comment19.target=void\ removeAll(SortedSet)
comment2.params=elementArray
comment2.target=SortedSet(java.lang.Comparable[])
comment20.params=originalValue\ newValue
comment20.target=void\ replace(java.lang.Comparable,\ java.lang.Comparable)
comment21.params=
comment21.target=void\ clear()
comment22.params=filename
comment22.target=void\ saveToFile(java.lang.String)
comment3.params=sortedSet
comment3.target=SortedSet(SortedSet)
comment4.params=
comment4.target=int\ getSize()
comment5.params=
comment5.target=boolean\ isEmpty()
comment6.params=
comment6.target=java.lang.Comparable\ getSmallestValue()
comment7.params=
comment7.target=java.lang.Comparable\ getLargestValue()
comment8.params=element
comment8.target=boolean\ contains(java.lang.Comparable)
comment9.params=elementArray
comment9.target=boolean\ containsAll(java.lang.Comparable[])
numComments=23
